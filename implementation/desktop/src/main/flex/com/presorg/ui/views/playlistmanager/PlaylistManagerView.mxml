<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:musicmanager="com.presorg.ui.views.musicmanager.*"
	xmlns:playlistmanager="com.presorg.ui.views.playlistmanager.*"
	xmlns:ilog="http://www.ilog.com/2007/ilog/flex"
	width="100%" height="100%" paddingTop="10"
	currentState="{playlistController.currentState}">
	
	<s:states>
		<s:State name="list"/>
		<s:State name="insert"/>
		<s:State name="update" />
	</s:states>
	
	<s:Label text="Playlist Manager" 
		fontWeight="bold" fontStyle="italic" fontSize="18"/>
	
	<s:HGroup gap="0" width="100%">
		<s:Button label="Add"
			click="playlistController.changeToAdd()"/>
		<!--		
		<s:Button label="Remove"
			enabled="{currentState == 'update' &amp;&amp; playlistForm.playlist}"
			click="playlistController.removeplaylist( playlistForm.playlist )"/>
		-->
	</s:HGroup>
	
	<s:Line width="100%">
		<s:stroke>
			<s:SolidColorStroke color="#000000" weight="1"/>
		</s:stroke>
	</s:Line>
	
	<mx:ViewStack width="100%" height="100%"
		selectedIndex.list="0"
		selectedIndex.insert="1"
		selectedIndex.update="1">
		
		<s:NavigatorContent width="100%" height="100%">
			
			<s:Label text="No data to display."
				fontWeight="bold" fontSize="25"
				verticalCenter="0" horizontalCenter="0"/>
			
			<s:TabBar dataProvider="{listStack}"
				horizontalCenter="0"/>
			
			<mx:ViewStack id="listStack" width="100%" height="100%"
				top="15"
				includeInLayout="{playlistController.playlists != null &amp;&amp; playlistController.playlists.length &gt; 0}"
				visible="{playlistController.playlists != null &amp;&amp; playlistController.playlists.length &gt; 0}" top.list="25">
				
				<!-- List view -->
				<s:NavigatorContent width="100%" height="100%"
					label="Grid View">
					<mx:DataGrid id="dataGrid" width="100%" height="100%" doubleClickEnabled="true"
						dataProvider="{playlistController.playlists}"
						doubleClick="playlistController.changeToUpdate( Playlist(dataGrid.selectedItem) )">
						<mx:columns>
							<mx:DataGridColumn headerText="Author" dataField="author"/>
							<mx:DataGridColumn headerText="Created" dataField="createdAt"/>
							<mx:DataGridColumn headerText="Summary" dataField="summary"/>
						</mx:columns>
					</mx:DataGrid>
				</s:NavigatorContent>
				
				<!-- Playlist Calendar -->
				<s:NavigatorContent width="100%" height="100%"
					label="Calendar View">
					<s:layout>
						<s:VerticalLayout/>
					</s:layout>
					
					<s:HGroup width="100%" 
						horizontalAlign="center" verticalAlign="middle">
						<mx:Image click="calendarDisplay.previousRange()" buttonMode="true"
							source="@Embed('/assets/img/arrow-left.png')"/>
						<s:DropDownList id="inputDisplayMode"
							selectedItem="{calendarDisplay.mode}"
							dataProvider="{CalendarMode.values}"/>
						<mx:Image click="calendarDisplay.nextRange()" buttonMode="true"
							source="@Embed('/assets/img/arrow-right.png')"/>
					</s:HGroup>
					
					<ilog:Calendar id="calendarDisplay" width="100%" height="100%"
						mode="{inputDisplayMode.selectedItem}" 
						dataProvider="{playlistController.playlists}"
						startTimeField="createdAt" endTimeField="createdAt" summaryField="summary" 
						allowWeekNavigation="true" allowMultipleSelection="false" allowMultiDaySelection="false" 
						allowTimeRangeNavigation="false" allowTimeRangeSelection="false"
						allowSelection="false" editable="false" doubleClickEnabled="true"
						showDataTips="true" showEditingTips="true" showTimeRangeTips="true" 
						animationDuration="500" alternatingCellColors="[0xFFFFFF, 0xFBFBFB]"
						doubleClick="calendarDisplayDoubleClickHandler(event)">
					</ilog:Calendar>
				</s:NavigatorContent>	
			</mx:ViewStack>
		</s:NavigatorContent>
		
		
		<!-- Playlist Form -->
		<s:NavigatorContent width="100%" height="100%">
			<s:layout>
				<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"/>
			</s:layout>
			
			<playlistmanager:PlaylistForm id="playlistForm"
				width="100%" height="100%" />
			
			<s:VGroup height="100%" verticalAlign="middle" horizontalAlign="center">
				<mx:Image source="@Embed('/assets/img/arrow-left.png')" buttonMode="true" 
					verticalAlign="middle" horizontalAlign="center"
					click="playlistController.copyMusicsToPlaylist( playlistForm.playlist, new ArrayCollection(inputMusics.selectedItems) )"/>
			</s:VGroup>
			
			<!-- Musics Table-->
			<s:VGroup height="100%" width="100%">
				<s:HGroup verticalAlign="middle" width="100%">
					<s:Label text="Search:"/>
					<s:TextInput id="inputSearchMusic" width="90%" 
						enter="playlistController.fillMusicsByFilter( inputSearchMusic.text )"/>
				</s:HGroup>
				<mx:DataGrid id="inputMusics" width="100%" height="100%"
					dataProvider="{playlistController.musics}"
					allowDragSelection="true" allowMultipleSelection="true"
					dragEnabled="true">
					<mx:columns>
						<mx:DataGridColumn headerText="Title" dataField="title"/>
						<mx:DataGridColumn headerText="Category" dataField="category" textAlign="center" width="85"/>
						<mx:DataGridColumn headerText="Ocurrences" dataField="ocurrences" width="80" textAlign="center"/>
					</mx:columns>
				</mx:DataGrid>
			</s:VGroup>
		</s:NavigatorContent>
	</mx:ViewStack>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.presorg.controller.PlaylistController;
			import com.presorg.entity.music.Music;
			import com.presorg.entity.playlist.CalendarMode;
			import com.presorg.entity.playlist.Playlist;
			
			import ilog.calendar.CalendarItem;
			import ilog.calendar.CalendarItemLabelRenderer;
			import ilog.calendar.CalendarItemRendererBase;
			
			import mx.collections.ArrayCollection;
			
			/*-------------------------------------------------------------------
			* 		 					ATTRIBUTES
			*-------------------------------------------------------------------*/
			[Inject]
			[Bindable]
			public var playlistController:PlaylistController;
			
			/*-------------------------------------------------------------------
			* 		 					HANDLERS
			*-------------------------------------------------------------------*/
			/**
			 * 
			 */
			[EventHandler(event="PresorgEvent.MUSIC_CHANGE_ENTITY", properties="data")]
			public function musicChangeEntityHandler( data:Music ):void
			{
				this.playlistController.fillMusicsByFilter( inputSearchMusic.text );
			}
			
			/**
			 * 
			 */ 
			private function calendarDisplayDoubleClickHandler( event:MouseEvent ):void
			{
				if ( event.target is CalendarItemRendererBase )
				{
					this.playlistController.changeToUpdate( Playlist(CalendarItem(CalendarItemRendererBase(event.target).data).data) );	
				}
			}
			
			/*-------------------------------------------------------------------
			* 		 				 GETTERS AND SETTERS
			*-------------------------------------------------------------------*/
		]]>
	</fx:Script>
</s:VGroup>
