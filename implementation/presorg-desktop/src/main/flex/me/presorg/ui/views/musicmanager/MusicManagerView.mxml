<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:musicmanager="me.presorg.ui.views.musicmanager.*"
	width="100%" height="100%"
	paddingTop="10"
	currentState="{musicController.currentState}">
	
	<s:states>
		<s:State name="list"/>
		<s:State name="insert"/>
		<s:State name="update"/>
		<s:State name="remove"/>
	</s:states>
	
	<s:Label text="Music Manager" 
		fontWeight="bold" fontStyle="italic" fontSize="18"/>
	
	<s:HGroup width="100%" verticalAlign="middle">
		
		<s:HGroup gap="0" width="100%">
			<s:Button label="Add"
				click="musicController.changeToAddMusic()"/>
			<s:Button label="Remove" enabled="{inputMusics ? inputMusics.selectedItem : false }"
				click="musicController.removeMusic( Music(inputMusics.selectedItem) )"/>			
		</s:HGroup>
		
		<s:HGroup verticalAlign="middle" width="45%" horizontalAlign="right">
			<s:Label text="Search:"/>
			<s:TextInput id="inputSearchMusic" width="90%" 
				enter="musicController.fillMusicsByFilter( inputSearchMusic.text )"/>
		</s:HGroup>
	</s:HGroup>
	
	<s:Line width="100%">
		<s:stroke>
			<s:SolidColorStroke color="#000000" weight="1"/>
		</s:stroke>
	</s:Line>
	
	<s:Group width="100%">
		<s:Label text="Music Categories" fontWeight="bold"
			verticalCenter="0" left="0"/>
	</s:Group>
	
	<s:HGroup width="100%" height="100%">
		<s:List id="inputCategory" height="100%" width="170" doubleClickEnabled="true"
			dataProvider="{musicController.categories}" labelField="name" 
			click="musicController.fillMusicsByCategory( Category(inputCategory.selectedItem) )"/>
		
		<mx:ViewStack width="100%" height="100%"
			selectedIndex.list="0"
			selectedIndex.insert="1"
			selectedIndex.update="1"
			creationPolicy="all">
			
			<!-- Music List -->
			<s:NavigatorContent width="100%" height="100%">
				<s:layout>
					<s:VerticalLayout/>
				</s:layout>
				
				<s:Group width="100%" height="100%">
					<mx:DataGrid id="inputMusics" width="100%" height="100%" 
						doubleClickEnabled="true" visible="{inputCategory.selectedItem}"
						dataProvider="{Category(inputCategory.selectedItem).musics}" 
						dataTipField="lyricString" showScrollTips="true"
						itemDoubleClick="musicController.changeToUpdate( Music(inputMusics.selectedItem) )">
						<mx:columns>
							<mx:DataGridColumn headerText="Title" dataField="title" showDataTips="true"/>
							<mx:DataGridColumn headerText="Description" dataField="description" textAlign="left" showDataTips="true"/>
							<mx:DataGridColumn headerText="Category" dataField="category" textAlign="center" width="60"/>
							<mx:DataGridColumn headerText="Ocurrences" dataField="ocurrences" width="70" textAlign="center"/>
						</mx:columns>
					</mx:DataGrid>
					<s:Label text="Select a Category to display its musics."
						fontWeight="bold" fontSize="25"
						verticalCenter="0" horizontalCenter="0"
						visible="{inputCategory.selectedItem == null}"/>
				</s:Group>
				
				<s:HGroup width="100%" horizontalAlign="right">
					<s:Button label="Update Music" enabled="{inputMusics ? inputMusics.selectedItem : false}"
						click="musicController.changeToUpdate( Music(inputMusics.selectedItem) )"/>					
				</s:HGroup>
			</s:NavigatorContent>
			
			<!-- Music Form -->
			<s:NavigatorContent width="100%" height="100%">
				<musicmanager:MusicForm/>
			</s:NavigatorContent>
			
		</mx:ViewStack>
	</s:HGroup>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import me.presorg.controller.MusicController;
			import me.presorg.entity.music.Category;
			import me.presorg.entity.music.Music;
			
			/*-------------------------------------------------------------------
			* 		 					ATTRIBUTES
			*-------------------------------------------------------------------*/
			[Inject]
			[Bindable]
			public var musicController:MusicController;
			
			/*-------------------------------------------------------------------
			* 		 					HANDLERS
			*-------------------------------------------------------------------*/
			[EventHandler(event="PresorgEvent.MUSIC_SEARCH", properties="data")]
			public function changeToAddHandler( data:String ):void
			{
				this.inputCategory.selectedItem = musicController.allMusicCategory;
				this.inputSearchMusic.text = data;
			}
		]]>
	</fx:Script>
</s:VGroup>
