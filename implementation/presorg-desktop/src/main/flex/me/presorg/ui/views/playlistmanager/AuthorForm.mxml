<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:playlist="me.presorg.entity.playlist.*"
	title="Author Manager" width="321" height="196"
	currentState="{authorController.currentState}">
	
	<s:layout>
		<s:VerticalLayout paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"/>
	</s:layout>

	<s:states>
		<s:State name="insert"/>
		<s:State name="update"/>
	</s:states>
	
	<mx:Form width="100%" height="100%" defaultButton="{btSave}">
		<mx:FormHeading label="Author Information"/>
		
		<mx:FormItem label="Name:" required="true" width="240">
			<s:TextInput id="inputName" text="@{author.name}" 
				width="100%"/>
		</mx:FormItem>
		
		<mx:FormItem label="Birthday:">
			<mx:DateField id="inputBirthday"
				selectedDate="@{author.birthday}"/>
		</mx:FormItem>
	</mx:Form>
	
	<s:HGroup horizontalAlign="right" width="100%">
		<s:Button id="btSave" label="Save" 
			click.insert="validate() ? authorController.insertAuthor( author ) : null"
			click.update="validate() ? authorController.updateAuthor( author ) : null"/>
		<s:Button label="Cancel"
			click="PopUpManager.removePopUp(this)"/>
	</s:HGroup>
	
	<fx:Declarations>
		<!-- Entity -->
		<playlist:Author id="author"/>
		
		<!-- Validators -->
		<fx:Array id="validators">
			<mx:StringValidator source="{inputName}" property="text"/>
			<mx:DateValidator source="{inputBirthday}" property="selectedDate" required="false"/>
		</fx:Array>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import me.presorg.controller.AuthorController;
			import me.presorg.entity.playlist.Author;
			
			import mx.managers.PopUpManager;
			import mx.validators.Validator;
			
			/*-------------------------------------------------------------------
			* 		 					ATTRIBUTES
			*-------------------------------------------------------------------*/
			[Inject]
			[Bindable]
			public var authorController:AuthorController;
			
			/*-------------------------------------------------------------------
			* 		 					HANDLERS
			*-------------------------------------------------------------------*/
			[EventHandler(event="PresorgEvent.AUTHOR_CHANGE_ENTITY", properties="data")]
			public function changeToAddHandler( data:Author ):void
			{
				this.author = data;
			}
			
			
			/*-------------------------------------------------------------------
			* 		 					BEHAVIORS
			*-------------------------------------------------------------------*/
			private function validate():Boolean
			{
				return Validator.validateAll( validators ).length == 0;
			}
			
		]]>
	</fx:Script>
	
</s:Panel>